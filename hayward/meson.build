hayward_sources = files(
	'src/commands.c',
	'src/config.c',
	'src/ipc_json.c',
	'src/ipc_server.c',
	'src/lock.c',
	'src/main.c',
	'src/output.c',
	'src/server.c',
	'src/haywardnag.c',

	'src/desktop/idle_inhibit_v1.c',
	'src/desktop/layer_shell.c',
	'src/desktop/server_decoration.c',
	'src/desktop/xdg_activation_v1.c',
	'src/desktop/xdg_decoration.c',
	'src/desktop/xdg_shell.c',

	'src/input/input_manager.c',
	'src/input/cursor.c',
	'src/input/keyboard.c',
	'src/input/libinput.c',
	'src/input/seat.c',
	'src/input/seatop_default.c',
	'src/input/seatop_down.c',
	'src/input/seatop_move.c',
	'src/input/seatop_resize_floating.c',
	'src/input/seatop_resize_tiling.c',
	'src/input/switch.c',
	'src/input/tablet.c',
	'src/input/text_input.c',

	'src/config/bar.c',
	'src/config/seat.c',
	'src/config/input.c',

	'src/commands/bar.c',
	'src/commands/bind.c',
	'src/commands/client.c',
	'src/commands/exit.c',
	'src/commands/exec.c',
	'src/commands/exec_always.c',
	'src/commands/floating.c',
	'src/commands/floating_minmax_size.c',
	'src/commands/floating_modifier.c',
	'src/commands/focus.c',
	'src/commands/focus_follows_mouse.c',
	'src/commands/focus_on_window_activation.c',
	'src/commands/focus_wrapping.c',
	'src/commands/font.c',
	'src/commands/force_display_urgency_hint.c',
	'src/commands/fullscreen.c',
	'src/commands/hide_edge_borders.c',
	'src/commands/kill.c',
	'src/commands/max_render_time.c',
	'src/commands/opacity.c',
	'src/commands/include.c',
	'src/commands/input.c',
	'src/commands/mode.c',
	'src/commands/move.c',
	'src/commands/nop.c',
	'src/commands/pin.c',
	'src/commands/popup_during_fullscreen.c',
	'src/commands/reload.c',
	'src/commands/resize.c',
	'src/commands/seat.c',
	'src/commands/seat/attach.c',
	'src/commands/seat/fallback.c',
	'src/commands/seat/hide_cursor.c',
	'src/commands/seat/idle.c',
	'src/commands/seat/keyboard_grouping.c',
	'src/commands/seat/pointer_constraint.c',
	'src/commands/seat/shortcuts_inhibitor.c',
	'src/commands/seat/xcursor_theme.c',
	'src/commands/set.c',
	'src/commands/shortcuts_inhibitor.c',
	'src/commands/haywardnag_command.c',
	'src/commands/tiling_drag.c',
	'src/commands/tiling_drag_threshold.c',
	'src/commands/title_align.c',
	'src/commands/title_format.c',
	'src/commands/titlebar_border_thickness.c',
	'src/commands/titlebar_padding.c',
	'src/commands/urgent.c',
	'src/commands/workspace.c',
	'src/commands/xwayland.c',

	'src/commands/bar/bind.c',
	'src/commands/bar/binding_mode_indicator.c',
	'src/commands/bar/colors.c',
	'src/commands/bar/height.c',
	'src/commands/bar/hidden_state.c',
	'src/commands/bar/icon_theme.c',
	'src/commands/bar/id.c',
	'src/commands/bar/mode.c',
	'src/commands/bar/modifier.c',
	'src/commands/bar/output.c',
	'src/commands/bar/pango_markup.c',
	'src/commands/bar/position.c',
	'src/commands/bar/separator_symbol.c',
	'src/commands/bar/status_command.c',
	'src/commands/bar/status_edge_padding.c',
	'src/commands/bar/status_padding.c',
	'src/commands/bar/strip_workspace_numbers.c',
	'src/commands/bar/strip_workspace_name.c',
	'src/commands/bar/haywardbar_command.c',
	'src/commands/bar/tray_bind.c',
	'src/commands/bar/tray_output.c',
	'src/commands/bar/tray_padding.c',
	'src/commands/bar/workspace_buttons.c',
	'src/commands/bar/workspace_min_width.c',
	'src/commands/bar/wrap_scroll.c',

	'src/commands/input/accel_profile.c',
	'src/commands/input/calibration_matrix.c',
	'src/commands/input/click_method.c',
	'src/commands/input/drag.c',
	'src/commands/input/drag_lock.c',
	'src/commands/input/dwt.c',
	'src/commands/input/events.c',
	'src/commands/input/left_handed.c',
	'src/commands/input/map_from_region.c',
	'src/commands/input/map_to_output.c',
	'src/commands/input/map_to_region.c',
	'src/commands/input/middle_emulation.c',
	'src/commands/input/natural_scroll.c',
	'src/commands/input/pointer_accel.c',
	'src/commands/input/repeat_delay.c',
	'src/commands/input/repeat_rate.c',
	'src/commands/input/scroll_button.c',
	'src/commands/input/scroll_factor.c',
	'src/commands/input/scroll_method.c',
	'src/commands/input/tap.c',
	'src/commands/input/tap_button_map.c',
	'src/commands/input/tool_mode.c',
	'src/commands/input/xkb_capslock.c',
	'src/commands/input/xkb_file.c',
	'src/commands/input/xkb_layout.c',
	'src/commands/input/xkb_model.c',
	'src/commands/input/xkb_numlock.c',
	'src/commands/input/xkb_options.c',
	'src/commands/input/xkb_rules.c',
	'src/commands/input/xkb_switch_layout.c',
	'src/commands/input/xkb_variant.c',

	'src/control/hwd_workspace_management_v1.c',

	'src/scene/text.c',

	'src/tree/arrange.c',
	'src/tree/column.c',
	'src/tree/root.c',
	'src/tree/transaction.c',
	'src/tree/view.c',
	'src/tree/window.c',
	'src/tree/workspace.c',
	'src/tree.c',
)

hayward_deps = [
	cairo,
	drm,
	jsonc,
	libevdev,
	libinput,
	libudev,
	math,
	pango,
	pcre2,
	glesv2,
	pixman,
	server_protos,
	wayland_server,
	wlroots,
	xkbcommon,
	xcb_icccm,
	hayward_common_dep,
]

if have_xwayland
	hayward_sources += 'src/desktop/xwayland.c'
	hayward_deps += xcb
endif

hayward_inc = include_directories('include')

executable(
	'hayward',
	hayward_sources,
	include_directories: [hayward_inc, shared_inc],
	dependencies: hayward_deps,
	install: true
)

test_suites = {
	'lint': [
		'exact-includes',
		'unused-symbols',
		'include-guards',
		'no-circular-includes',
		'commands-and-headers-match',
		'tree-header-orders-match',
		'source-and-header-orders-match',
		'source-and-header-contents-match',
	],
}

pymod = import('python')
python = pymod.find_installation('python3')

foreach suite, tests : test_suites
	foreach test_name : tests
		test(
			suite + '-' + test_name,
			python,
			args: [
				meson.current_source_dir() +
				'/tests/' + suite +
				'/test_' + test_name.replace('-', '_') + '.py',
			],
			env: {
				'MESON_BUILD_ROOT': meson.project_build_root(),
				'MESON_SOURCE_ROOT': meson.project_source_root(),
			},
			timeout: 1000,
		)
	endforeach
endforeach
